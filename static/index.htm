<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title>WiRoc</title>
    <link rel="stylesheet" href='/static/style.css' />
    <link rel="stylesheet" href='/static/Combobox.css' />
    <link rel="stylesheet" href="/static/jquery/jquery-ui.css">
    <script src="/static/jquery/external/jquery/jquery.js"></script>
    <script src="/static/jquery/jquery-ui.js"></script>
    <script src="/static/doT.js"></script>
    <script src="/static/combobox.js"></script>
    <script>
        function isInt(value) {
            return !isNaN(value) && (function(x) { return (x | 0) === x; })(parseFloat(value))
        }

        window.wiroc = window.wiroc || {};

        wiroc.MainSettings = function MainSettings() {
            this.id = null;
            this.NodeNumber = 0;
            this.MeosDatabaseServer = "";
            this.MeosDatabaseServerPort = "";
            this.NodeToControlNumberMapping = [];
        };

        wiroc.RadioSettings = function RadioSettings() {
            this.id = null;
            this.RadioNumber = null;
            this.Description = null;
            this.ChannelId = null;
            this.RadioMode = null;
            this.Enabled = null;
            this.RadioExists = null;
            this.InboundRadioNodes = null;
        };

        wiroc.InboundRadioNode = function InboundRadioNode() {
            this.id = null;
            this.NodeNumber = null;
            this.RadioSettingsId = null;
        }

        wiroc.NodeToControlNumber = function NodeToControlNumber() {
            this.id = null;
            this.NodeNumber = null;
            this.ControlNumber = null;
        }

        wiroc.FillChannelDropdown = function (radioPanel, callback) {
            var dropdowns = radioPanel.find("#Channel");
            var channelid = radioPanel.data('channelid');
            var optionTemplateFunc = doT.template($('#channelOptionTemplate').html());
            var optionTemplateSelectedFunc = doT.template($('#channelOptionTemplateSelected').html());

            $.getJSON( "/radiosettings/getchannels", function( json ) {
                $('option', dropdowns).remove();
                var rows = json.Channels;
                var txt = '';
                for (var i = 0; i < rows.length; i++) {
                    if (rows[i].id == channelid) {
                            txt += optionTemplateSelectedFunc(rows[i]);
                    } else {
                        txt += optionTemplateFunc(rows[i]);
                    }
                }
                dropdowns.append(txt);
                //dropdowns.combobox();
                radioPanel.find(".channel-dropdown-div .ui-autocomplete-input").click(function () {
                    radioPanel.find(".channel-dropdown-div .ui-autocomplete-input").val('');
                });
                callback();
            });
        };

        wiroc.SetupAddInboundRadioNodeClick = function(radioPanel) {
            $(radioPanel).find('#AddInboundRadioNode').click(function() {
                if ($(this).hasClass('disabled')) return;
                var nodeNumber = $(this).closest('tr').find('#InboundRadioNode').val();
                var exists = false;
                $(radioPanel).find('#InboundRadioNodesTBody tr').each(function(index, tr) {
                    var nodeNr = $(tr).find('td').eq(0).html();
                    if (nodeNumber == nodeNr) {
                        exists = true;
                    }
                });

                if (isInt(nodeNumber) && parseInt(nodeNumber) >= 0 && parseInt(nodeNumber) <= 31 && !exists)
                {
                    var node = new wiroc.InboundRadioNode();
                    node.NodeNumber = nodeNumber;
                    var inboundRadioNodeRowTemplateFunc = doT.template(document.getElementById('inboundRadioNodeRowTemplate').text, undefined, undefined);
                    $(radioPanel).find('#InboundRadioNodesTBody').append(inboundRadioNodeRowTemplateFunc(node));
                    $(this).closest('tr').find('#InboundRadioNode').val('');
                } else {
                    $(radioPanel).find('#InboundRadioNodeFlash').show().delay(1000).fadeOut(800);
                }
            });
        }

        wiroc.SetupRemoveInboundRadioNodeClick = function(radioPanel) {
            $(radioPanel).find('#InboundRadioNodesTBody').on( "click", '.remove-inbound-radio-node', function() {
                if ($(this).hasClass('disabled')) return;
                $(this).closest('tr').remove();
            });
        }

        wiroc.SaveRadioSettings = function (radioPanel) {
            var tabIndex = $("#tabs").tabs('option', 'active');
            radioPanel = $(radioPanel);
            radioSettings = new wiroc.RadioSettings();
            radioSettings.RadioNumber = radioPanel.data('radionumber');
            radioSettings.id = radioPanel.data('id');
            radioSettings.Description = radioPanel.find('#Description').val();
            radioSettings.ChannelId = parseInt(radioPanel.find('#Channel option:selected').val());
            radioSettings.RadioMode = radioPanel.find('#RadioMode option:selected').val();
            radioSettings.Enabled = (radioPanel.find('#Enabled option:selected').val() == "true");
            radioSettings.RadioExists = radioPanel.data('radioexists');
            radioSettings.InboundRadioNodes = [];
            radioPanel.find('#InboundRadioNodesTBody tr').each(function(index, tr) {
                var nodeNr = $(tr).find('td').html();
                var inboundRadioNode = new wiroc.InboundRadioNode();
                inboundRadioNode.NodeNumber = nodeNr;
                radioSettings.InboundRadioNodes.push(inboundRadioNode);
            });
            $.post("/radiosettings", JSON.stringify(radioSettings), function(result){
                radioPanel.closest('.radio-settings-tab').find('#HighlightMessage').show().delay(1000).fadeOut(800);
                setTimeout(function () { // need to wait for the combobox to finish
    	            wiroc.LoadRadioSettings(function() {
    	               $("#tabs").tabs({ active: tabIndex });
    	            });
            	}, 1800);
            }, "json");
        };

        wiroc.SetupRadioSettingSaveClick = function(radioPanel) {
            $(radioPanel).parent().find('#btnSave').click(function() { wiroc.SaveRadioSettings(radioPanel); });
        }

        wiroc.SetupAddNodeToControlMappingClick = function() {
            $('#AddNodeToControlMapping').click(function() {
                var nodeNumber = $('#NodeNumber').val();

                var exists = false;
                $('#NodeToControlMappingTBody tr').each(function(index, tr) {
                    var nodeNr = $(tr).find('td').eq(0).html();
                    if (nodeNumber == nodeNr) {
                        exists = true;
                    }
                });

                var controlNumber = $('#ControlNumber').val();
                if (isInt(nodeNumber) && isInt(controlNumber)
                    && parseInt(nodeNumber) >= 1 && parseInt(nodeNumber) <= 31
                    && parseInt(controlNumber) > 0 && !exists)
                {
                    var mapping = new wiroc.NodeToControlNumber();
                    mapping.NodeNumber = nodeNumber;
                    mapping.ControlNumber = controlNumber;
                    var nodeToControlRowTemplateFunc = doT.template(document.getElementById('nodeToControlRowTemplate').text, undefined, undefined);
                    $('#NodeToControlMappingTBody').append(nodeToControlRowTemplateFunc(mapping));
                    $('#NodeNumber').val('');
                    $('#ControlNumber').val('');
                } else {
                    $('#NodeToControlMappingFlash').show().delay(1000).fadeOut(800);
                }
            });
        }

        wiroc.SetupRemoveNodeToControlMappingClick = function() {
            $('#NodeToControlMappingTBody').on('click', '.remove-node-to-control-mapping', function() {
                $(this).closest('tr').remove();
            });
        }

        wiroc.SetupSaveMainSettingsClick = function() {
            $('#btnSaveMainSettings').click(function() {
                var mainSettings = new wiroc.MainSettings();
                mainSettings.id = null; // will always update if main settings row exists regardless of id
                mainSettings.NodeNumber = 0;
                mainSettings.SendToMeosDatabase = $('#SendToMeosDatabase').is(':checked');
                mainSettings.MeosDatabaseServer = $("#MeosDatabaseServer").val();
                mainSettings.MeosDatabaseServerPort = $("#MeosDatabaseServerPort").val();
                mainSettings.NodeToControlNumberMapping = [];
                $('#NodeToControlMappingTBody tr').each(function(index, tr) {
                    var nodeNr = $(tr).find('td').eq(0).html();
                    var ctrlNr = $(tr).find('td').eq(1).html();
                    var nodeToControlNumber = new wiroc.NodeToControlNumber();
                    nodeToControlNumber.NodeNumber = nodeNr;
                    nodeToControlNumber.ControlNumber = ctrlNr;
                    mainSettings.NodeToControlNumberMapping.push(nodeToControlNumber);
                });
                $.post("/mainsettings/save", JSON.stringify(mainSettings), function(result){
                    $('#btnSaveMainSettings').closest('.main-settings-tab').find('#HighlightMessage').show().delay(1000).fadeOut(800);
                    setTimeout(function () { // need to wait for the combobox to finish
    	                wiroc.LoadMainSettings();
            	    }, 1800);
                }, "json");
            });
        }

        wiroc.SetupSendToMeosDatabaseClick = function() {
            $('#SendToMeosDatabase').click(function() {
                var sendToMeosDatabase = $('#SendToMeosDatabase').is(':checked');
                $("#MeosDatabaseServer").prop("disabled", !sendToMeosDatabase);
                $("#MeosDatabaseServerPort").prop("disabled", !sendToMeosDatabase);
            });
        }

        wiroc.SetupScanForNewRadiosClick = function() {
            $('#btnScanForNewRadios').click(function() {
                $.getJSON( "/mainsettings/scanForNewRadios", function( json ) {
                    $('#ScanForNewRadiosFlash').show().delay(1000).fadeOut(800);
                    location.reload();
                });
            });
        }

        wiroc.SetupRemoveAllPunchesClick = function() {
            $('#btnRemovePunches').click(function() {
                $.getJSON( "/mainsettings/removeAllPunches", function( json ) {
                    $('#RemovePunchesFlash').show().delay(1000).fadeOut(800);
                });
            });
        }

        wiroc.SetupRecreateDatabaseClick = function() {
            $('#btnRecreateDatabase').click(function() {
                $.getJSON( "/mainsettings/recreateDatabase", function( json ) {
                    $('#RecreateDatabaseFlash').show().delay(1000).fadeOut(800);
                });
            });
        }

        wiroc.EnableDisableRadioSettingControls = function(radioPanel) {
            var enabled = ($(radioPanel).find('#Enabled option:selected').val() == "true");
            var radioExists = $(radioPanel).data('radioexists');
            enabled = enabled && radioExists;
            $(radioPanel).find('#Enabled').parent().find("input.ui-autocomplete-input").prop("disabled", !radioExists);
            $(radioPanel).parent().find('#btnSave').prop("disabled", !radioExists);
            if (radioExists)
            {
                $(radioPanel).find("#Enabled").parent().find("button.ui-button").button("enable")
                $(radioPanel).find("#Enabled").parent().find("input.ui-autocomplete-input").css("background-color", "rgb(255, 255, 255)");

            } else {
                $(radioPanel).find("#Enabled").parent().find("button.ui-button").button("disable")
                $(radioPanel).find("#Enabled").parent().find("input.ui-autocomplete-input").css("background-color", "rgb(235, 235, 228)");
            }
            $(radioPanel).find('#Description').prop("disabled", !enabled);
            $(radioPanel).find("#RadioMode").parent().find("input.ui-autocomplete-input").prop("disabled", !enabled);
            $(radioPanel).find("#Channel").parent().find("input.ui-autocomplete-input").prop("disabled", !enabled);
            if (enabled) {
                $(radioPanel).find("#RadioMode").parent().find("input.ui-autocomplete-input").css("background-color", "rgb(255, 255, 255)");
                $(radioPanel).find("#Channel").parent().find("input.ui-autocomplete-input").css("background-color", "rgb(255, 255, 255)");
                $(radioPanel).find("#RadioMode").parent().find("button.ui-button").button("enable")
                $(radioPanel).find("#Channel").parent().find("button.ui-button").button("enable")
                $(radioPanel).find('#AddInboundRadioNode').removeClass("disabled");
                $(radioPanel).find('.remove-inbound-radio-node').removeClass("disabled");
            } else {

                $(radioPanel).find("#RadioMode").parent().find("input.ui-autocomplete-input").css("background-color", "rgb(235, 235, 228)");
                $(radioPanel).find("#Channel").parent().find("input.ui-autocomplete-input").css("background-color", "rgb(235, 235, 228)");
                $(radioPanel).find("#RadioMode").parent().find("button.ui-button").button("disable")
                $(radioPanel).find("#Channel").parent().find("button.ui-button").button("disable")
                $(radioPanel).find('#AddInboundRadioNode').addClass("disabled");
                $(radioPanel).find('.remove-inbound-radio-node').addClass("disabled");
            }
            $(radioPanel).find('#InboundRadioNode').prop("disabled", !enabled);

        }


        wiroc.SetupEnabledChange = function(radioPanel) {
            $(radioPanel).find('#Enabled').change(function() {
                wiroc.EnableDisableRadioSettingControls(radioPanel);
            });
        };

        wiroc.LoadRadioSettings = function(callback) {
            $.getJSON( "/mainsettings/getradios", function( json ) {
                $('.radio-settings-tab').remove();
                $('.radio-settings-tab-header').remove();
                //$('.main-settings-tab-header').remove();
                //$('#tabs').find('ul').append('<li class="main-settings-tab-header"><a href="#tabs-main">Main settings</a></li>');

                var tabHeaderTemplFunc = doT.template(document.getElementById('tabHeaderTemplate').text, undefined, undefined);
                var tabTemplFunc = doT.template(document.getElementById('tabRadioSettingsTemplate').text, undefined, undefined);

		        $('#tabs ul').append(tabHeaderTemplFunc(json));
                $('#tabs').append(tabTemplFunc(json));

                $('.div-radio-settings').each(function(index, radioPanel) {
                    wiroc.FillChannelDropdown($(radioPanel), function() {
                        $(radioPanel).find('#Enabled').combobox();
                        $(radioPanel).find('#Channel').combobox();
                        $(radioPanel).find('#RadioMode').combobox();
                        setTimeout(function () { // need to wait for the combobox to finish
    	                    wiroc.EnableDisableRadioSettingControls(radioPanel);
            	        }, 100);

                    });
                    wiroc.SetupAddInboundRadioNodeClick(radioPanel);
                    wiroc.SetupRemoveInboundRadioNodeClick(radioPanel);
                    wiroc.SetupRadioSettingSaveClick(radioPanel);
                    wiroc.SetupEnabledChange(radioPanel);
                    wiroc.SetupTooltip()
                });

                $('#tabs').tabs();
                $("div#tabs").tabs("refresh");
                if (callback != null) {
                    callback();
                }
            });
        }

        wiroc.SetupTooltip = function()
        {
            $('#ChannelHelp').tooltip({
                items: ".channel-help",
                position: { my: "left middle", at: "right bottom" },
                tooltipClass: "wiroc-tooltip",
                content: function(callbackWithRepsonse) {
                    return "<u>Channel definitions</u><br/>" +
                        "<table width='700px'>"+
                        "<thead><tr><th align='left'>Channel</th><th align='left'>Speed</th><th align='left'>Freq</th><th align='left'>RF Factor<br/>Spreading factor</th><th align='left'>RF BW</th><th align='left'>Sensitivity</th></tr></thead>" +
                        "<tbody>" +
                        "<tr><td>A1</td><td>146 bps</td><td>439.700 MHz</td><td>4096 (12)</td><td>62.5 (6)</td><td>-? dBm</td></tr>" +
                        "<tr><td>B1</td><td>146 bps</td><td>439.775 MHz</td><td>4096 (12)</td><td>62.5 (6)</td><td>-? dBm</td></tr>" +
                        "<tr><td>C1</td><td>146 bps</td><td>439.850 MHz</td><td>4096 (12)</td><td>62.5 (6)</td><td>-? dBm</td></tr>" +
                        "<tr><td>D1</td><td>146 bps</td><td>439.925 MHz</td><td>4096 (12)</td><td>62.5 (6)</td><td>-? dBm</td></tr>" +
                        "<tr><td>E2</td><td>293 bps</td><td>439.725 MHz</td><td>4096 (12)</td><td>125 (7)</td><td>-138 dBm</td></tr>" +
                        "<tr><td>F2</td><td>293 bps</td><td>439.800 MHz</td><td>4096 (12)</td><td>125 (7)</td><td>-138 dBm</td></tr>" +
                        "<tr><td>G2</td><td>293 bps</td><td>439.875 MHz</td><td>4096 (12)</td><td>125 (7)</td><td>-138 dBm</td></tr>" +
                        "<tr><td>H2</td><td>293 bps</td><td>439.950 MHz</td><td>4096 (12)</td><td>125 (7)</td><td>-138 dBm</td></tr>" +
                        "<tr><td>I3</td><td>586 bps</td><td>439.750 MHz</td><td>4096 (12)</td><td>250 (8)</td><td>-132 dBm</td></tr>" +
                        "<tr><td>J3</td><td>586 bps</td><td>439.825 MHz</td><td>4096 (12)</td><td>250 (8)</td><td>-132 dBm</td></tr>" +
                        "<tr><td>K3</td><td>586 bps</td><td>439.900 MHz</td><td>4096 (12)</td><td>250 (8)</td><td>-132 dBm</td></tr>" +
                        "<tr><td>L3</td><td>586 bps</td><td>439.975 MHz</td><td>4096 (12)</td><td>250 (8)</td><td>-132 dBm</td></tr>" +
                        "<tr><td>A4</td><td>2148 bps</td><td>439.700 MHz</td><td>2048 (11)</td><td>500 (9)</td><td>-129 dBm</td></tr>" +
                        "<tr><td>B4</td><td>2148 bps</td><td>439.775 MHz</td><td>2048 (11)</td><td>500 (9)</td><td>-129 dBm</td></tr>" +
                        "<tr><td>C4</td><td>2148 bps</td><td>439.850 MHz</td><td>2048 (11)</td><td>500 (9)</td><td>-129 dBm</td></tr>" +
                        "<tr><td>D4</td><td>2148 bps</td><td>439.925 MHz</td><td>2048 (11)</td><td>500 (9)</td><td>-129 dBm</td></tr>" +
                        "<tr><td>E5</td><td>7032 bps</td><td>439.725 MHz</td><td>512 (9)</td><td>500 (9)</td><td>-123 dBm</td></tr>" +
                        "<tr><td>F5</td><td>7032 bps</td><td>439.800 MHz</td><td>512 (9)</td><td>500 (9)</td><td>-123 dBm</td></tr>" +
                        "<tr><td>G5</td><td>7032 bps</td><td>439.875 MHz</td><td>512 (9)</td><td>500 (9)</td><td>-123 dBm</td></tr>" +
                        "<tr><td>H5</td><td>7032 bps</td><td>439.950 MHz</td><td>512 (9)</td><td>500 (9)</td><td>-123 dBm</td></tr>" +
                        "<tr><td>I6</td><td>21880 bps</td><td>439.750 MHz</td><td>128 (7)</td><td>500 (9)</td><td>-117 dBm</td></tr>" +
                        "<tr><td>J6</td><td>21880 bps</td><td>439.825 MHz</td><td>128 (7)</td><td>500 (9)</td><td>-117 dBm</td></tr>" +
                        "<tr><td>K6</td><td>21880 bps</td><td>439.900 MHz</td><td>128 (7)</td><td>500 (9)</td><td>-117 dBm</td></tr>" +
                        "<tr><td>L6</td><td>21880 bps</td><td>439.975 MHz</td><td>128 (7)</td><td>500 (9)</td><td>-117 dBm</td></tr>" +
                        "</tbody>" +
                        "</table>";
                }
            });

            $('#RadioModeHelp').tooltip({
                items: ".radio-mode-help",
                position: { my: "left middle", at: "right bottom" },
                tooltipClass: "wiroc-tooltip",
                content: function(callbackWithRepsonse) {
                    return "<u>Radio mode definitions</u><br/>" +
                        "<ul>" +
                            "<li>Point to Point with retry" +
                            "<ul>" +
                                "<li>This radio receives messages from only one node</li>" +
                                "<li>An acknowledment is sent when message is received</li>" +
                                "<li>Sending node resends if no acknowledment is received</li>" +
                            "</ul>" +
                            "</li>" +
                        "</ul>" +
                        "<ul>" +
                            "<li>Point to Point without retry" +
                            "<ul>" +
                                "<li>This radio receives messages from only one node</li>" +
                                "<li>NO acknowledment is sent</li>" +
                                "<li>The sending node never resends message, if it doesn't reach the destination then it is lost</li>" +
                            "</ul>" +
                            "</li>" +
                        "</ul>" +
                        "<ul>" +
                            "<li>Point to MultiPoint with retry" +
                            "<ul>" +
                                "<li>This radio receives messages from several nodes</li>" +
                                "<li>This radio sends out timeslot messages containing information on when the sending radios can transmit</li>" +
                                "<li>The timeslot messages contains acknowledment</li>" +
                                "<li>Sending nodes resends if no acknowledment is received</li>" +
                                "<li>Introduce significant latency, especially with slow data speed</li>" +
                                "<li>Number of messages that can be sent from a node also decrease significantly</li>" +
                            "</ul>" +
                            "</li>" +
                        "</ul>";
                }
            });


            $('#DirectNodeHelp').tooltip({
                items: ".direct-node-help",
                position: { my: "left middle", at: "right bottom" },
                tooltipClass: "wiroc-tooltip",
                content: function(callbackWithRepsonse) {
                    return "Add the node number of the radio node(s) that send messages to this radio";
                }
            });

            $('#NodeToControlMappingHelp').tooltip({
                items: ".node-to-control-mapping-help",
                position: { my: "left middle", at: "right bottom" },
                tooltipClass: "wiroc-tooltip",
                content: function(callbackWithRepsonse) {
                    return "Add all the control radio node numbers and the control number they are connected to";
                }
            });

        }

        wiroc.LoadMainSettings = function(callback) {
            $.getJSON( "/mainsettings/getradios", function( json ) {
                 $.getJSON( "/mainsettings", function( json ) {
                    var tabMainSettingsTemplFunc = doT.template(document.getElementById('mainSettingsTemplate').text, undefined, undefined);

                    $('#tabs-main').empty();
                    $('#tabs-main').append(tabMainSettingsTemplFunc(json.mainSettings));

                    wiroc.SetupSaveMainSettingsClick();
                    wiroc.SetupAddNodeToControlMappingClick();
                    wiroc.SetupRemoveNodeToControlMappingClick();
                    wiroc.SetupSendToMeosDatabaseClick();
                    wiroc.SetupRemoveAllPunchesClick();
                    wiroc.SetupRecreateDatabaseClick();
                    wiroc.SetupScanForNewRadiosClick();

                    if (callback != null) {
                        callback();
                    }
                });

                $('#tabs').tabs();
                $("div#tabs").tabs("refresh");
            });
        }

        $(document).ready(function() {
            wiroc.LoadRadioSettings();
            wiroc.LoadMainSettings(function() {
                wiroc.SetupTooltip();
            });

        });
    </script>

    <script id="channelOptionTemplate" type="text/plain">
        <option value="{{=it.id}}">{{=it.FrequencyName}}{{=it.SpeedName}}</option>
    </script>

    <script id="channelOptionTemplateSelected" type="text/plain">
        <option value="{{=it.id}}" selected>{{=it.FrequencyName}}{{=it.SpeedName}}</option>
    </script>

    <script id="directNodeTemplate" type="text/plain">
        <div data-id="{{=it.id}}">{{=it.NodeNumber}}&nbsp;<a href="javascript:void(0)" class="remove-node-number">Remove</a></div>
    </script>

    <script type="text/plain" id="tabHeaderTemplate">
        {{~it.Radios :value:index}}
            <li class="radio-settings-tab-header"><a href="#tabs-{{=value.RadioNumber}}">Radio {{=value.RadioNumber}}</a></li>
        {{~}}
    </script>

    <script type="text/plain" id="nodeToControlRowTemplate">
        <tr><td style="text-align:right; padding-right:21px"">{{=it.NodeNumber}}</td><td style="text-align:right; padding-right:21px"">{{=it.ControlNumber}}</td><td><a href="javascript:void(0)" class="remove-node-to-control-mapping">Remove</a></td></tr>
    </script>

    <script type="text/plain" id="inboundRadioNodeRowTemplate">
        <tr><td style="text-align:right; padding-right:21px">{{=it.NodeNumber}}</td><td><a href="javascript:void(0)" class="remove-inbound-radio-node">Remove</a></td></tr>
    </script>

    <script type="text/plain" id="tabRadioSettingsTemplate">
        {{~it.Radios :value:index}}
            <div id="tabs-{{=value.RadioNumber}}" class="radio-settings-tab">
                <div id="RadioDoesNotExistMessage" class="ui-widget" style="width:860px{{? value.RadioExists}}; display:none{{?}}">
	                <div class="ui-state-highlight ui-corner-all"
	                        style="margin-top: 20px; padding: 0 .7em; background-color:red; border-color:black">
		                <p style="color:black">Radio not connected</p>
	                </div>
                </div>
                <div id="HighlightMessage" class="ui-widget" style="width:860px; display:none">
	                <div class="ui-state-highlight ui-corner-all"
	                        style="margin-top: 20px; padding: 0 .7em; background-color:lightgreen; border-color:black">
		                <p style="color:black">Radio settings saved to database</p>
	                </div>
                </div>
                <h2>Radio {{=value.RadioNumber}} settings</h2>
                <div style="width:840px" class="group-border">
                    <div class="div-table div-radio-settings" data-id="{{=value.id}}"
                            data-radioexists="{{=value.RadioExists}}"
                            data-radionumber="{{=value.RadioNumber}}"
                            data-channelid="{{=value.ChannelId}}">
                        <div class="div-table-row">
                            <div class="div-table-row-cell"><span class="titleFormItem">Enabled:</span></div>
                            <div class="div-table-row-cell">
                                <div class="enabled-dropdown-div">
                                    <select id="Enabled">
                                        <option value="true" {{? value.Enabled}}selected{{?}}>True</option>
                                        <option value="false" {{? !value.Enabled}}selected{{?}}>False</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="div-table-row">
                            <div class="div-table-row-cell"><span class="titleFormItem">Description:</span></div>
                            <div class="div-table-row-cell" style="white-space:normal">
                                <textarea id="Description" rows="4" cols="80">{{=value.Description}}</textarea>
                            </div>
                        </div>
                        <div class="div-table-row">
                            <div class="div-table-row-cell"><span class="titleFormItem">Channel:</span></div>
                            <div class="div-table-row-cell">
                                <div class="channel-dropdown-div">
                                    <select id="Channel"></select>
                                    <img alt="help tips" class="channel-help" id="ChannelHelp" src="/static/help-circled-alt-24-000000.png" style="float:right"/>
                                </div>
                            </div>
                        </div>
                        <div class="div-table-row">
                            <div class="div-table-row-cell"><span class="titleFormItem">Radio mode:</span></div>
                            <div class="div-table-row-cell">
                                <div class="radiomode-dropdown-div">
                                    <select id="RadioMode">
                                        <option value="0" {{? value.RadioMode == 0}}selected{{?}}>Point to Point with retry</option>
                                        <option value="1" {{? value.RadioMode == 1}}selected{{?}}>Point to Point without retry</option>
                                        <option value="2" {{? value.RadioMode == 2}}selected{{?}}>Point to MultiPoint with retry</option>
                                        <option value="99" {{? value.RadioMode == 99}}selected{{?}}>Sending test message</option>
                                    </select>
                                    <img alt="help tips" class="radio-mode-help" id="RadioModeHelp" src="/static/help-circled-alt-24-000000.png" style="float:right"/>
                                </div>

                            </div>
                        </div>
                        <div class="div-table-row">&nbsp;</div>
                        <div class="div-table-row">
                            <div class="div-table-row-cell">Connected to these direct inbound radio nodes:</div>
                            <div class="div-table-row-cell">
                                <img alt="help tips" class="direct-node-help" id="DirectNodeHelp" src="/static/help-circled-alt-24-000000.png" style="float:right"/>
                                <table>
                                <thead>
                                    <tr><th>Node number</th><th></th></tr>
                                    <tr><th><input type="number" min="1" max="31" class="wiroc-textbox" style="width: 90px; text-align:right" id="InboundRadioNode"/></th>
                                    <th><a href="javascript:void(0)" id="AddInboundRadioNode">Add node number</a>
                                    <span id="InboundRadioNodeFlash" style="display:none; color:red">Only values 1-31 allowed. No duplicates.</span>
                                    </th></tr>
                                </thead>
                                <tbody id="InboundRadioNodesTBody">
                                     {{~value.InboundRadioNodes :inboundRadioNode:index3}}
                                        <tr><td style="text-align:right; padding-right:21px">{{=inboundRadioNode.NodeNumber}}</td><td><a href="javascript:void(0)" class="remove-inbound-radio-node">Remove</a></td></tr>
                                     {{~}}
                                </tbody>
                                </table>

                            </div>
                        </div>
                    </div>
                    <div class="radio-settings-buttons"><input id="btnSave" class="save" type="button" value="Save" /></div>
                </div>
            </div>
        {{~}}
    </script>

    <script type="text/plain" id="mainSettingsTemplate">
        <div id="HighlightMessage" class="ui-widget" style="width:860px; display:none">
	        <div class="ui-state-highlight ui-corner-all"
	                       style="margin-top: 20px; padding: 0.7em; background-color:lightgreen; border-color:black">
		        <p style="color:black">Main settings saved to database</p>
            </div>
        </div>
        <h2>Main settings</h2>
        <div style="width:840px" class="group-border">
            <div class="div-table div-main-settings" data-id="{{=it.id}}">
                <div class="group-border">
                    <div class="div-table-row">
                        <div class="div-table-row-cell" style="width: 250px"><span class="titleFormItem">Remove punches from queue:</span></div>
                        <div class="div-table-row-cell">
                            <input id="btnRemovePunches" class="save" type="button" value="Remove all punches" />
                            <span id="RemovePunchesFlash" style="display:none">Punches removed</span>
                        </div>
                    </div>
                    <div class="div-table-row">
                        <div class="div-table-row-cell" style="width: 250px"><span class="titleFormItem">Erase and create empty database:</span></div>
                        <div class="div-table-row-cell">
                            <input id="btnRecreateDatabase" class="save" type="button" value="Erase database" />
                            <span id="RecreateDatabaseFlash" style="display:none">Database erased</span>
                        </div>
                    </div>
                    <div class="div-table-row">
                        <div class="div-table-row-cell" style="width: 250px"><span class="titleFormItem">Scan for new radios:</span></div>
                        <div class="div-table-row-cell">
                            <input id="btnScanForNewRadios" class="save" type="button" value="Scan" />
                            <span id="ScanForNewRadiosFlash" style="display:none">Scan performed</span>
                        </div>
                    </div>
                </div>
                <div class="group-border">
                    <div class="div-table-row">&nbsp;</div>
                    <div class="div-table-row">
                        <div class="div-table-row-cell" style="width: 250px"><span class="titleFormItem">Node to control number mapping:</span></div>
                        <div class="div-table-row-cell">
                            <img alt="help tips" class="node-to-control-mapping-help" id="NodeToControlMappingHelp" src="/static/help-circled-alt-24-000000.png" style="float:right"/>
                            <table>
                            <thead>
                                <tr><th style="text-align:right">Node<br/>number</th><th width="75" style="text-align:right">Control<br/>number</th><th></th><tr>
                                <tr><th style="text-align:right"><input type="number" class="wiroc-textbox" min="1" max="31" style="width: 45px; text-align:right" id="NodeNumber"/></th>
                                    <th style="text-align:right"><input type="number" class="wiroc-textbox" min="1" style="width: 45px; text-align:right" id="ControlNumber"/></th>
                                    <th><a href="javascript:void(0)" id="AddNodeToControlMapping">Add mapping</a>
                                    <span id="NodeToControlMappingFlash" style="display:none; color:red">Only node numbers 1-31 and control number 1+ allowed. No duplicate node numbers.</span>
                                    </th></tr>
                            </thead>
                            <tbody id="NodeToControlMappingTBody">
                                 {{~it.NodeToControlNumberMapping :nodeToCtrl:index}}
                                    <tr><td style="text-align:right; padding-right:21px">{{=nodeToCtrl.NodeNumber}}</td><td style="text-align:right; padding-right:21px">{{=nodeToCtrl.ControlNumber}}</td><td><a href="javascript:void(0)" class="remove-node-to-control-mapping">Remove</a></td></tr>
                                 {{~}}
                            </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="group-border">
                    <div class="div-table-row">
                        <div class="div-table-row-cell" style="width: 250px"><span class="titleFormItem">Send to Meos database:</span></div>
                        <div class="div-table-row-cell">
                            <input type="checkbox" id="SendToMeosDatabase" style="width:16px;height:16px" {{? it.SendToMeosDatabase}}checked="checked"{{?}} />
                        </div>
                    </div>
                    <div class="div-table-row">
                        <div class="div-table-row-cell"><span class="titleFormItem">Meos database server ip/dns alias:</span></div>
                        <div class="div-table-row-cell">
                            <input type="text" class="wiroc-textbox" style="width: 300px" id="MeosDatabaseServer" value="{{= it.MeosDatabaseServer}}" {{? !it.SendToMeosDatabase}}disabled{{?}}/>
                        </div>
                        <div class="div-table-row-cell"><span class="titleFormItem">Port:</span></div>
                        <div class="div-table-row-cell">
                            <input type="text" class="wiroc-textbox" style="width: 50px" id="MeosDatabaseServerPort" value="{{= it.MeosDatabaseServerPort}}" {{? !it.SendToMeosDatabase}}disabled{{?}}/>
                        </div>
                    </div>
                </div>
            </div>
            <div class="div-table-row">&nbsp;</div>

            <div class="main-settings-buttons"><input id="btnSaveMainSettings" class="save" type="button" value="Save" /></div>
        </div>
    </script>

</head>
<body>
    <div id="tabs" style="height: 600px">
      <ul>
        <li class="main-settings-tab-header"><a href="#tabs-main">Main settings</a></li>
      </ul>
      <div class="main-settings-tab" id="tabs-main">
      </div>
    </div>
</body>
</html>